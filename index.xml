<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Cyan&#39;s Notebook</title>
    <link>/</link>
    <description>Cyan&#39;s Notebook</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Tue, 07 Mar 2023 14:43:48 &#43;0000</lastBuildDate>
      <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    <item>
  <title>PVE编译Realtek网卡驱动</title>
  <link>/posts/pve-realtek-driver/</link>
  <pubDate>Tue, 07 Mar 2023 14:43:48 &#43;0000</pubDate>
  <author>Cyan</author>
  <guid>/posts/pve-realtek-driver/</guid>
  <description><![CDATA[预准备 下载内核源码 1 sudo apt-get install linux-headers-$(uname -r) 创建链接 1 ln -s /boot/System.map-$(uname -r) /lib/modules/$(uname -r)/build/System.map 生成证书 1 openssl req -new -nodes -utf8 -sha512 -days 36500 -batch -x509 -config x509.genkey -outform DER -out signing_key.x509 -keyout signing_key.pem 1 cp signing_key.pem signing_key.x509 /usr/src/linux-headers-$(uname -r)/certs/ REF Realtek PCIe FE / GBE / 2.5G / Gaming Ethernet Family Controller Software - REALTEK
关于 /lib/modules/内核版本号/ build 和 /source_/lib/modules/build_小羊苏C的博客-CSDN博客
PVE默认R8169网卡驱动不兼容RTL8111/8168/8411问题记录 - ColoFly - 博客园 (cnblogs.com)
ubuntu16.04驱动安装提示sign-file: certs/signing_key.]]></description>
</item>
<item>
  <title>Nginx</title>
  <link>/posts/nginx/</link>
  <pubDate>Mon, 06 Mar 2023 15:11:39 &#43;0000</pubDate>
  <author>Cyan</author>
  <guid>/posts/nginx/</guid>
  <description><![CDATA[ABCD 在Docker中部署 先运行一下 1 docker run --name nginx nginx CtrlC
创建卷 1 2 mkdir -p /home/docker-nginx mkdir -p /home/docker-nginx/html 复制配置文件 1 2 docker cp nginx:/etc/nginx /var mv /var/nginx /home/docker-nginx/conf 过河拆桥 1 2 docker stop nginx docker rm nginx 运行 1 2 3 4 docker run -p 80:80 -p 443:443 --name nginx --restart=unless-stopped \ -v /home/docker-nginx/conf:/etc/nginx \ -v /home/docker-nginx/html:/usr/share/nginx/html \ -d nginx REF docker nginx -v 挂载配置文件问题_很懒的十六的博客-CSDN博客
Nginx 配置详解 | 菜鸟教程 (runoob.]]></description>
</item>
<item>
  <title>Linux Timeline</title>
  <link>/posts/linux-timeline/</link>
  <pubDate>Mon, 06 Mar 2023 13:18:58 &#43;0000</pubDate>
  <author>Cyan</author>
  <guid>/posts/linux-timeline/</guid>
  <description><![CDATA[]]></description>
</item>
<item>
  <title>PVE</title>
  <link>/posts/pve/</link>
  <pubDate>Sun, 05 Mar 2023 05:42:12 &#43;0000</pubDate>
  <author>Cyan</author>
  <guid>/posts/pve/</guid>
  <description><![CDATA[REF https://www.right.com.cn/FORUM/thread-8231970-1-1.html]]></description>
</item>
<item>
  <title>LXC容器</title>
  <link>/posts/lxc/</link>
  <pubDate>Sat, 04 Mar 2023 05:19:31 &#43;0000</pubDate>
  <author>Cyan</author>
  <guid>/posts/lxc/</guid>
  <description><![CDATA[REF https://www.redhat.com/zh/topics/containers/whats-a-linux-container http://futurist.se/gldt/wp-content/uploads/12.10/gldt1210.svg]]></description>
</item>
<item>
  <title>7z 命令行</title>
  <link>/posts/7zip/</link>
  <pubDate>Sat, 11 Feb 2023 16:58:00 &#43;0800</pubDate>
  <author>Cyan</author>
  <guid>/posts/7zip/</guid>
  <description><![CDATA[命令行 7-zip │ 7z.exe │ 7zFM.exe │ 7zG.exe
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 C:\Program Files\7-Zip&gt;7z -h 7-Zip 21.]]></description>
</item>
<item>
  <title>Docker</title>
  <link>/posts/docker-basic/</link>
  <pubDate>Thu, 02 Feb 2023 03:28:00 &#43;0800</pubDate>
  <author>Cyan</author>
  <guid>/posts/docker-basic/</guid>
  <description><![CDATA[基本概念 docker 说明 Image 源文件 Container Image的一个运行实例 Volume Container的虚拟存储卷 常用命令 相互复制文件 1 docker cp [OPTIONS] CONTAINER:SRC_PATH DEST_PATH 1 docker cp [OPTIONS] SRC_PATH CONTAINER:DEST_PATH 1 docker cp [OPTIONS] CONTAINER:SRC_PATH CONTAINER:DEST_PATH 更新container自启动状态 1 2 3 docker update --restart=unless-stopped [容器名] no/on-failure/always/unless-stopped 进入容器命令行 1 docker exec -it [containerid] /bin/bash 映射 Example:
1 docker run -p 80:8080 -v local_path:container_path Ref 什么是Docker？看这一篇干货文章就够了！ - 知乎 (zhihu.com)
浅谈Linux Cgroups机制 - 知乎 (zhihu.com)
docker Volume - 知乎 (zhihu.com)
Link jesseduffield/lazydocker: The lazier way to manage everything docker (github.]]></description>
</item>
<item>
  <title>Windows 符号链接</title>
  <link>/posts/mklink/</link>
  <pubDate>Tue, 17 Jan 2023 22:54:00 &#43;0800</pubDate>
  <author>Cyan</author>
  <guid>/posts/mklink/</guid>
  <description><![CDATA[ 1 2 3 4 5 6 7 8 9 10 11 12 C:\Windows\System32&gt;mklink 创建符号链接。 MKLINK [[/D] | [/H] | [/J]] Link Target /D 创建目录符号链接。默认为文件 符号链接。 /H 创建硬链接而非符号链接。 /J 创建目录联接。 Link 指定新的符号链接名称。 Target 指定新链接引用的路径 (相对或绝对)。 ]]></description>
</item>
<item>
  <title>Anaconda镜像</title>
  <link>/posts/conda-source/</link>
  <pubDate>Fri, 06 Jan 2023 19:55:00 &#43;0800</pubDate>
  <author>Cyan</author>
  <guid>/posts/conda-source/</guid>
  <description><![CDATA[<p>修改用户目录下的 <code>.condarc</code> 文件；</p>
<p>没有则执行 <code>conda config --set show_channel_urls yes</code> 生成。</p>]]></description>
</item>
<item>
  <title>Python处理剪贴板</title>
  <link>/posts/clipboard/</link>
  <pubDate>Tue, 29 Nov 2022 17:27:55 &#43;0800</pubDate>
  <author>Cyan</author>
  <guid>/posts/clipboard/</guid>
  <description><![CDATA[去除换行 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import time import os import pyperclip def exec(): &#34;&#34;&#34;logic&#34;&#34;&#34; content = pyperclip.paste().replace(&#39;\r\n&#39;, &#39;&#39;).replace(&#39;\n&#39;, &#39;&#39;) pyperclip.copy(content) return content if __name__ == &#39;__main__&#39;: try: res = exec() os.system(&#34;color 27&#34;) print(res) except AttributeError: os.system(&#34;color 47&#34;) time.sleep(1) 保存图片 1 2 3 4 5 6 7 8 9 10 11 12 13 import time import os from PIL import ImageGrab try: img = ImageGrab.]]></description>
</item>
<item>
  <title>自动打卡</title>
  <link>/posts/auto-clock-in/</link>
  <pubDate>Mon, 28 Nov 2022 12:16:58 &#43;0800</pubDate>
  <author>Cyan</author>
  <guid>/posts/auto-clock-in/</guid>
  <description><![CDATA[]]></description>
</item>
<item>
  <title>CUDA、CUDNN</title>
  <link>/posts/cuda-cudnn/</link>
  <pubDate>Sat, 21 May 2022 19:21:32 &#43;0800</pubDate>
  <author>Cyan</author>
  <guid>/posts/cuda-cudnn/</guid>
  <description><![CDATA[CUDA与CUDNN CUDA CUDA（Compute Unified Device Architecture），是显卡厂商NVIDIA推出的运算平台。 CUDA™是一种由NVIDIA推出的通用并行计算架构，该架构使GPU能够解决复杂的计算问题。
CUDA_百度百科 (baidu.com)
CUDNN NVIDIA cuDNN是用于深度神经网络的GPU加速库。它强调性能、易用性和低内存开销。NVIDIA cuDNN可以集成到更高级别的机器学习框架中，如谷歌的Tensorflow、加州大学伯克利分校的流行caffe软件。简单的插入式设计可以让开发人员专注于设计和实现神经网络模型，而不是简单调整性能，同时还可以在GPU上实现高性能现代并行计算。
参考（强烈推荐）：CUDA与cuDNN - 简书 (jianshu.com)
NVIDIA的驱动与CUDA版本 在第一次装的时候，满脑子？？？
NVDIA驱动安装的有个CUDA了，版本和需要的不对怎么办，难道重装驱动吗？ 需要多个CUDA怎么办？ 驱动版本与CUDA版本 随驱动安装的叫做driver版本，自己后续安装的叫做runtime版本，可以随意安装多个版本的CUDA，但是保证driver版本号&gt;=runtime版本号
多版本共存 程序在调用CUDA的时候一般是利用path（或者说是windows环境变量）去加载dll等，保证每个版本的文件完整，并且在path中能够搜索到即可（windows也就是配置好环境变量）。
安装 首先要确定需要安装的版本。tensorflow可以在从源代码构建 | TensorFlow (google.cn)查看
手动安装 Linux建议直接CONDA安装
下载地址 CUDA：CUDA Toolkit Archive | NVIDIA Developer
CUDNN：NVIDIA cuDNN | NVIDIA Developer
安装 建议看下面的博客，讲的很好
cuda安装教程+cudnn安装教程_sinat_23619409的博客-CSDN博客_cuda安装
使用CONDA安装 CUDA
1 conda install cudatoolkit=&lt;版本&gt; cuDNN
1 conda install cudnn=&lt;版本&gt; ]]></description>
</item>
<item>
  <title>Python 常识入门(?)</title>
  <link>/posts/python-builtin/</link>
  <pubDate>Sat, 21 May 2022 19:21:32 &#43;0800</pubDate>
  <author>Cyan</author>
  <guid>/posts/python-builtin/</guid>
  <description><![CDATA[list, tuple, set, dict 1 2 3 4 [i for i in range(10)] (i for i in range(10)) {i for i in range(10)} {i:i for i in range(10)} lambda 1 2 3 4 lambda arguments : expression x = lambda a : a + 10 print(x(5)) sort 1 2 3 4 arr=[1,8,3,6,5,4,7,2,9] sorted(arr) list.sort(reverse=True|False, key=myFunc) 1 2 3 4 5 6 7 8 9 10 11 12 def myFunc(e): return e[&#39;year&#39;] cars = [ {&#39;car&#39;: &#39;Porsche&#39;, &#39;year&#39;: 1963}, {&#39;car&#39;: &#39;Audi&#39;, &#39;year&#39;: 2010}, {&#39;car&#39;: &#39;BMW&#39;, &#39;year&#39;: 2019}, {&#39;car&#39;: &#39;Volvo&#39;, &#39;year&#39;: 2013} ] cars.]]></description>
</item>
<item>
  <title>动态规划</title>
  <link>/posts/dp/</link>
  <pubDate>Sat, 21 May 2022 18:57:41 &#43;0800</pubDate>
  <author>Cyan</author>
  <guid>/posts/dp/</guid>
  <description><![CDATA[<h2 id="动规解题的一般思路">动规解题的一般思路</h2>
<p><strong>将原问题分解为子问题</strong></p>
<p>把原问题分解为若干个子问题，子问题和原问题形式相同或类似，只不过规模变小了。子问题都解决，原问题即解决(数字三角形例）。
子问题的解一旦求出就会被保存，所以每个子问题只需求解一次。</p>]]></description>
</item>
<item>
  <title>树莓派4B × Ubuntu</title>
  <link>/posts/pi4b-system/</link>
  <pubDate>Wed, 27 Apr 2022 14:55:51 &#43;0800</pubDate>
  <author>Cyan</author>
  <guid>/posts/pi4b-system/</guid>
  <description><![CDATA[Ubuntu 20.04 LTS ARM64 at least 4G RAM
默认账户密码 ubuntu
ubuntu
apt源 1 2 3 4 5 deb https://mirror.tuna.tsinghua.edu.cn/ubuntu-ports/ focal main restricted universe multiverse deb https://mirror.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiverse deb https://mirror.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiverse deb https://mirror.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse deb https://mirror.tuna.tsinghua.edu.cn/ubuntu-ports/ focal-proposed main restricted universe multiverse&#34; WiFi 1 2 3 4 5 6 7 8 9 10 11 12 network: ethernets: eth0: dhcp4: true optional: true version: 2 wifis: wlan0: dhcp4: true access-points: &#34;你的wifi的ssid&#34;: password: &#34;你的密码&#34; 1 2 netplan try netplan apply ]]></description>
</item>
<item>
  <title>Python OI 基础（语言篇）</title>
  <link>/posts/python-oi-basis/</link>
  <pubDate>Fri, 08 Apr 2022 22:44:06 &#43;0800</pubDate>
  <author>Cyan</author>
  <guid>/posts/python-oi-basis/</guid>
  <description><![CDATA[基本 输入 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 def cin1(): return [int(i) for i in input().split()] def cin2(): return map(int, input().split()) def cin3(): return list(map(int, input().split())) # 输入一个常数 n, = cin() # 注意&#39;,&#39; m, n = cin() # 输入一个数组 arr = cin() # 注意cin2会返回map对象 输入输出重定向 使用操作系统的重定向
1 python script.py &lt; input &gt; output Python 与 STL Python 标准库 — Python 3.]]></description>
</item>
<item>
  <title>背包问题</title>
  <link>/posts/knapsack-problem/</link>
  <pubDate>Fri, 08 Apr 2022 21:35:22 &#43;0800</pubDate>
  <author>Cyan</author>
  <guid>/posts/knapsack-problem/</guid>
  <description><![CDATA[<h2 id="前言">前言</h2>
<p>在21年我第一次学习动态规划算法的时候，HQ学长安排的入门题目即是背包。直至前不久我只把背包当成一种有限的题目来看，未想还有如此讲究。</p>
<p><strong>实际上，有很多问题可以规约为一个背包问题。</strong></p>]]></description>
</item>
<item>
  <title>BERT</title>
  <link>/posts/bert/</link>
  <pubDate>Wed, 06 Apr 2022 21:08:15 &#43;0800</pubDate>
  <author>Cyan</author>
  <guid>/posts/bert/</guid>
  <description><![CDATA[前言 研究BERT（无果），记录些好的参考（减轻浏览器收藏夹的压力……）
参考 论文解读:BERT模型及fine-tuning - 知乎 (zhihu.com)
LeeMeng - 進擊的 BERT：NLP 界的巨人之力與遷移學習
google-research/bert: TensorFlow code and pre-trained models for BERT (github.com)
LeeMeng - 淺談神經機器翻譯 &amp; 用 Transformer 與 TensorFlow 2 英翻中]]></description>
</item>
<item>
  <title>WSA 安装与使用</title>
  <link>/posts/wsa-installation/</link>
  <pubDate>Tue, 05 Apr 2022 22:45:04 &#43;0800</pubDate>
  <author>Cyan</author>
  <guid>/posts/wsa-installation/</guid>
  <description><![CDATA[Installation 准备 启用Hyper-V 和 虚拟机平台 配置好 ADB 下载WSA package [Microsoft Store - Generation Project (v1.2.3) by @rgadguard &amp; mkuba50] (rg-adguard.net) https://www.microsoft.com/store/productId/9P3395VX91NR 下载最大的那个（1G+） 安装 截止日前，不需要修改区域（中国区），仅亚马逊商店不提供服务
管理员运行Power Shell 1 Add-AppxPackage -Path &lt;path to downloaded file&gt; 在Windows中打开开发者模式 连接到ADB 1 adb connect [::1]:58526 安装程序 1 adb -s [::1]:58526 install &#34;D:\HandShaker.apk&#34; 推荐 Item Intro HandShaker 锤子遗产、子系统和电脑互传文件 权限狗 给应用添加权限，比如 Ｖ** 微软桌面 App 启动器 https://apkpure.com/ Apk 下载 代理 宿主机器安装应用，并allow lan，端口修改为自己的配置
1 2 3 4 5 @echo off adb connect [::1]:58526 &amp;&amp; adb shell &#34;settings put global http_proxy `ip route list match 0 table all scope global | cut -F3`:7890&#34; pause Ref Windows11 安装 WSA 简单上手一试_姜戈12的博客-CSDN博客]]></description>
</item>
<item>
  <title>Optimizer</title>
  <link>/posts/optimizer/</link>
  <pubDate>Tue, 05 Apr 2022 22:43:07 &#43;0800</pubDate>
  <author>Cyan</author>
  <guid>/posts/optimizer/</guid>
  <description><![CDATA[<h2 id="前言">前言</h2>
<p>参考的资料和自己在进行炼丹（姑且这么称作）的时候，经常使用的是Adam，在尝试了learning_rate, schedule等方法（无果，大概…）后，突然想到要去了解一下其中的原理。</p>]]></description>
</item>
</channel>
</rss>
